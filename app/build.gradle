apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion rootProject.ext.androidBuildToolsVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    defaultConfig {
        applicationId "com.demo.androidbootstrap"
        minSdkVersion rootProject.ext.androidMinSdkVersion
        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            java {
                exclude 'com/demo/base/di/**'
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(path: ':domain')
    compile project(path: ':data')

    compile "com.android.support:appcompat-v7:${rootProject.ext.androidAppCompatVersion}"
    compile "com.android.support:recyclerview-v7:${rootProject.ext.androidAppCompatVersion}"
    compile "com.android.support.constraint:constraint-layout:${rootProject.ext.androidConstraintLayoutVersion}"

    compile "com.squareup.okhttp3:logging-interceptor:${rootProject.ext.okHttpVersion}"

    compile "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofitVersion}"
    compile "com.squareup.retrofit2:converter-gson:${rootProject.ext.gsonConverterVersion}"

    compile "io.reactivex.rxjava2:rxjava:${rootProject.ext.reactiveJavaVersion}"
    compile "com.squareup.retrofit2:adapter-rxjava2:${rootProject.ext.retrofitReactiveAdapterVersion}"

    compile "io.reactivex.rxjava2:rxandroid:${rootProject.ext.reactiveAndroidVersion}"

    compile "com.google.dagger:dagger:${rootProject.ext.daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-compiler:${rootProject.ext.daggerVersion}"
    compile "com.google.dagger:dagger-android:${rootProject.ext.daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${rootProject.ext.daggerVersion}"
    compile "com.google.dagger:dagger-android-support:${rootProject.ext.daggerVersion}"

    compile "com.jakewharton:butterknife:${rootProject.ext.butterknifeVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${rootProject.ext.butterknifeVersion}"

    compile "com.squareup.picasso:picasso:${rootProject.ext.picassoVersion}"

    provided "javax.annotation:jsr250-api:${rootProject.ext.javaxAnnotationVersion}"

    androidTestCompile("com.android.support.test.espresso:espresso-core:${rootProject.ext.androidEspressoVersion}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:${rootProject.ext.androidEspressoVersion}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testCompile "junit:junit:${rootProject.ext.junitVersion}"
    // Optional -- Mockito framework
    testCompile "org.mockito:mockito-core:${rootProject.ext.mockitoVersion}"
}
